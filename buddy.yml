- pipeline: "Build & Lint"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "*"
  ref_type: "WILDCARD"
  target_site_url: "https://github.com/chartbrew/chartbrew"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: npm test"
    type: "BUILD"
    disabled: true
    working_directory: "/buddy/chartbrew"
    docker_image_name: "library/node"
    docker_image_tag: "10"
    execute_commands:
    - "# yarn install"
    - "npm install"
    - "npm test"
    setup_commands:
    - "npm install -g gulp grunt-cli"
    services:
    - type: "MYSQL"
      version: "5.7"
      connection:
        host: "mysql"
        port: 3306
        user: "root"
        password: "password"
        db: "chartbrewdev"
    mount_filesystem_path: "/buddy/chartbrew"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Setup the project"
    type: "BUILD"
    working_directory: "/buddy/chartbrew"
    docker_image_name: "library/node"
    docker_image_tag: "10"
    execute_commands:
    - "# Setup the project"
    - "npm run setup"
    setup_commands:
    - "npm install -g gulp grunt-cli"
    services:
    - type: "MYSQL"
      version: "5.7"
      connection:
        host: "mysql"
        port: 3306
        user: "root"
        password: "password"
        db: "chartbrewdev"
    mount_filesystem_path: "/buddy/chartbrew"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Linting the server code"
    type: "BUILD"
    working_directory: "/buddy/chartbrew"
    docker_image_name: "library/node"
    docker_image_tag: "10"
    execute_commands:
    - "# Linting the server code"
    - "cd server && npm run lint"
    setup_commands:
    - "npm install -g gulp grunt-cli"
    mount_filesystem_path: "/buddy/chartbrew"
    shell: "BASH"
    trigger_condition: "ALWAYS"
    run_next_parallel: true
  - action: "Linting the client code"
    type: "BUILD"
    working_directory: "/buddy/chartbrew"
    docker_image_name: "library/node"
    docker_image_tag: "10"
    execute_commands:
    - "# yarn install"
    - "cd client && npm run lint"
    setup_commands:
    - "npm install -g gulp grunt-cli"
    mount_filesystem_path: "/buddy/chartbrew"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Building Semantic UI"
    type: "BUILD"
    working_directory: "/buddy/chartbrew"
    docker_image_name: "library/node"
    docker_image_tag: "10"
    execute_commands:
    - "# Building semantic"
    - "cd client && cp -Rn node_modules/fomantic-ui/tasks src/semantic && cp -Rn node_modules/fomantic-ui/src src/semantic && mv src/semantic/src/_site src/semantic/src/site && mv src/semantic/src/theme.config.example src/semantic/src/theme.config && cd src/semantic && npx gulp build"
    setup_commands:
    - "npm install -g gulp grunt-cli"
    mount_filesystem_path: "/buddy/chartbrew"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Build the client"
    type: "BUILD"
    working_directory: "/buddy/chartbrew"
    docker_image_name: "library/node"
    docker_image_tag: "10"
    execute_commands:
    - "# Build the client"
    - "cd client && npm run build"
    setup_commands:
    - "npm install -g gulp grunt-cli"
    mount_filesystem_path: "/buddy/chartbrew"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Building the docs"
    type: "BUILD"
    working_directory: "/buddy/chartbrew"
    docker_image_name: "library/node"
    docker_image_tag: "10"
    execute_commands:
    - "# Building the docs"
    - "npm run docs:build"
    setup_commands:
    - "npm install -g gulp grunt-cli"
    mount_filesystem_path: "/buddy/chartbrew"
    shell: "BASH"
    trigger_condition: "ALWAYS"
